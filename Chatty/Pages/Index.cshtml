@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

@section Scripts{
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chat")
            .configureLogging(signalR.LogLevel.Information)
            .build();
        connection.start().catch(err => console.error(err.toString()));

        var sendMessage = function () {
            if (typeof selectedUserId !== "undefined"){
            var textArea = document.getElementById("message");
            if (textArea.value == null || textArea.value === "") {
                alert("Message is empty");
            }
            else {
                console.log("user id is", selectedUserId);
                connection.invoke("SendMessageToUser", selectedUserId, textArea.value);
            }
            }
            else{
                alert('No user is selected');
            }
        };

        connection.on("ReceiveMessage", (user, message) => {
            const encodedMsg = user + " says " + message;
            const li = document.createElement("li");
            li.textContent = encodedMsg;
            document.getElementById("messages").appendChild(li);
        });

    </script>
}
<div class="row">
    
    <div class="col-md-4">
        <h1>Chatty</h1>
        <label class="caption"><i>Powered by SignalR</i> </label>
        <hr/>
        <div class="form-group">
            <label for="message">Message: </label>
            <textarea class="form-control" id="message"></textarea>
        </div>
        <div class="form-group">
            <button class="btn btn-default" id="send" onclick="sendMessage()">Send</button>
        </div>
    </div>
    
    <div class="col-md-3">
        @await Component.InvokeAsync("OnlineUsers")
    </div>
</div>
<div>
    <label for="messages">Received Messages:</label>
    <ul id="messages"></ul>
</div>
